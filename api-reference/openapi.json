{
  "openapi": "3.0.1",
  "info": {
    "title": "Auth API",
    "description": "Complete authentication and user management API for frontend engineers",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    },
    {
      "url": "https://jethings-backend.fly.dev",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "summary": "Sign Up",
        "description": "Create a new user account",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid payload or validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Email or phone number already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify-email": {
      "post": {
        "summary": "Verify Email",
        "description": "Verify user email with OTP",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid or expired OTP",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "summary": "Sign In",
        "description": "Authenticate user and return tokens",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sign in successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials or email not verified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/auth/request-password-reset": {
      "post": {
        "summary": "Request Password Reset",
        "description": "Request password reset OTP",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset request processed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessage"
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify-password-reset": {
      "post": {
        "summary": "Verify Password Reset",
        "description": "Reset password with OTP",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPasswordResetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid or expired OTP",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "summary": "Refresh Token",
        "description": "Refresh access token using refresh token",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tokens refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or expired refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/auth/revoke-token": {
      "post": {
        "summary": "Revoke Token",
        "description": "Revoke a specific refresh token",
        "tags": ["Authentication"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token revoked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/auth/revoke-all-tokens": {
      "post": {
        "summary": "Revoke All Tokens",
        "description": "Revoke all refresh tokens for the authenticated user",
        "tags": ["Authentication"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "All tokens revoked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout",
        "description": "Logout user from all devices (alias for revoke-all-tokens)",
        "tags": ["Authentication"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SignUpRequest": {
        "type": "object",
        "required": ["firstName", "lastName", "email", "phoneNumber", "password", "age"],
        "properties": {
          "firstName": {
            "type": "string",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Valid email address"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Valid phone number format"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "description": "Minimum 6 characters"
          },
          "age": {
            "type": "integer",
            "minimum": 1,
            "maximum": 120,
            "description": "Integer between 1-120"
          },
          "description": {
            "type": "string",
            "description": "Optional user description/bio"
          }
        }
      },
      "VerifyEmailRequest": {
        "type": "object",
        "required": ["otp"],
        "properties": {
          "otp": {
            "type": "string",
            "pattern": "^[0-9]{6}$",
            "description": "6-digit OTP code"
          }
        }
      },
      "SignInRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          }
        }
      },
      "PasswordResetRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          }
        }
      },
      "VerifyPasswordResetRequest": {
        "type": "object",
        "required": ["otp", "newPassword"],
        "properties": {
          "otp": {
            "type": "string",
            "pattern": "^[0-9]{6}$",
            "description": "6-digit OTP code"
          },
          "newPassword": {
            "type": "string",
            "minLength": 6,
            "description": "New password (minimum 6 characters)"
          }
        }
      },
      "RefreshTokenRequest": {
        "type": "object",
        "required": ["refreshToken"],
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "Valid refresh token"
          }
        }
      },
      "RevokeTokenRequest": {
        "type": "object",
        "required": ["refreshToken"],
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "Refresh token to revoke"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User's unique identifier"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "firstName": {
            "type": "string",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "User's roles"
          }
        }
      },
      "SignInResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success message"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "accessToken": {
            "type": "string",
            "description": "JWT access token"
          },
          "refreshToken": {
            "type": "string",
            "description": "JWT refresh token"
          },
          "expiresIn": {
            "type": "integer",
            "description": "Access token expiration time in seconds"
          }
        }
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success message"
          },
          "accessToken": {
            "type": "string",
            "description": "New JWT access token"
          },
          "refreshToken": {
            "type": "string",
            "description": "New JWT refresh token"
          },
          "expiresIn": {
            "type": "integer",
            "description": "Access token expiration time in seconds"
          }
        }
      },
      "SuccessMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success message"
          }
        }
      },
      "ErrorMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}